import{_ as a,p as e,q as n,Y as i}from"./framework-aa5c4115.js";const r={},o=i('<h2 id="卷积神经网络-convolutional-neural-network-cnn" tabindex="-1"><a class="header-anchor" href="#卷积神经网络-convolutional-neural-network-cnn" aria-hidden="true">#</a> 卷积神经网络（Convolutional Neural Network，CNN）</h2><h1 id="卷积神经网络-convolutional-neural-network-cnn-简介" tabindex="-1"><a class="header-anchor" href="#卷积神经网络-convolutional-neural-network-cnn-简介" aria-hidden="true">#</a> 卷积神经网络（Convolutional Neural Network，CNN）简介</h1><p>卷积神经网络（Convolutional Neural Network，CNN）是一种常用于图像处理、计算机视觉和自然语言处理等领域的神经网络结构。它的主要特点是通过卷积运算实现对输入数据的特征提取，然后通过池化（Pooling）操作减小数据集的大小，最终将提取到的特征送入全连接层进行分类或回归等任务。CNN 在图像识别、目标检测、语音识别、自然语言处理等任务上的优秀表现使得它受到了广泛的关注和应用。</p><p>下面我们将从卷积、池化、激活函数等方面对 CNN 进行介绍。</p><h2 id="卷积层" tabindex="-1"><a class="header-anchor" href="#卷积层" aria-hidden="true">#</a> 卷积层</h2><p>卷积层是 CNN 中最关键的组件之一。卷积操作是一种数学运算，它将两个函数重叠在一起并生产第三个函数。在卷积神经网络中，卷积操作是指将一个卷积核（Filter）通过滑动窗口的方式与输入数据进行元素乘积和求和，得到一个新的特征图（Feature Map）。如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/ycdfwzy/img/images/convolution.png" alt="CNN 卷积操作示意图"></p><p>卷积操作在特征提取和图像处理方面具有很好的效果，它可以有效地寻找到图像的特征，例如边缘、角、纹理等。卷积核的大小、步幅、填充等参数会影响卷积结果。</p><h2 id="池化层" tabindex="-1"><a class="header-anchor" href="#池化层" aria-hidden="true">#</a> 池化层</h2><p>池化层用于缩减特征图的大小，从而减少 CNN 的参数数量，降低过拟合的风险，并提升模型的计算速度。池化操作可以分为平均池化和最大池化两种。</p><p>平均池化是计算池化窗口中所有元素的平均值，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/ycdfwzy/img/images/avg-pooling.png" alt="CNN 平均池化操作示意图"></p><p>最大池化是计算池化窗口中所有元素的最大值，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/ycdfwzy/img/images/max-pooling.png" alt="CNN 最大池化操作示意图"></p><p>池化层的输出可以缩减图像的大小，但是会使得一些信息丢失，所以在选择池化操作时需要考虑信息损失的程度，并根据具体的任务选择适合的池化方式。</p><h2 id="激活函数" tabindex="-1"><a class="header-anchor" href="#激活函数" aria-hidden="true">#</a> 激活函数</h2><p>激活函数用于引入非线性因素，通常位于两个卷积层或者全连接层之间。常用的激活函数有 Sigmoid、ReLu、Tanh 等。</p><p>Sigmoid 激活函数的数学形式为 $f(x) = \\frac{1}{1+e^{-x}}$，其输出值为区间 $(0,1)$，它的图像呈现为 S 形曲线。但是在深度学习领域，Sigmoid 的使用已经逐渐被淘汰。</p><p>ReLu（Rectified Linear Unit）激活函数的数学形式为 $f(x) = max(0,x)$，即取输入值和 $0$ 中较大的那个。它在实现时的计算速度很快，训练速度也较快，因此成为了目前最常用的激活函数。</p><p>Tanh 激活函数的数学形式为 $f(x) = \\frac{e^{x}-e^{-x}}{e^{x}+e^{-x}}$，它的输出值为区间 $(-1,1)$，在某些场景中也得到了一定的应用。</p><h2 id="全连接层" tabindex="-1"><a class="header-anchor" href="#全连接层" aria-hidden="true">#</a> 全连接层</h2><p>全连接层概念很简单：将上一层的输出值展平后，接入一个单独的网络层中。它的作用是将卷积和池化等过程得到的特征进行组合，最终输出结果。例如，在进行图像分类时，全连接层将最后一个卷积层的输出展平后，接入一个全连接层中进行分类，如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/ycdfwzy/img/images/fc-layer.png" alt="CNN 全连接层操作示意图"></p><p>在训练过程中，CNN 会自动学习到特征表示，并将高阶特征表示为低阶特征的组合。因而可以通过增加 CNN 的层数来增加模型的复杂度，提升学习效果。</p><h2 id="cnn-应用举例" tabindex="-1"><a class="header-anchor" href="#cnn-应用举例" aria-hidden="true">#</a> CNN 应用举例</h2><p>CNN 在计算机视觉领域有着广泛的应用，如人脸识别、手写数字识别、物体识别等。在本文中，我们以手写数字识别为例，展示 CNN 的应用过程：</p><ol><li>数据导入：载入手写数字数据集，包括训练集和测试集；</li><li>卷积层和池化层：构建多个卷积层和池化层，提取出手写数字图像的特征；</li><li>展开和全连接层：将池化层的输出值展开后接入全连接层进行分类；</li><li>训练和检验：使用反向传播算法进行训练，并在测试集上进行分类精度的检验。</li></ol><p>在本例中，CNN 通过多层卷积和池化操作自动提取出了手写数字图像的特征，然后通过全连接层进行分类，最终实现了数字识别的功能。</p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>通过上文的介绍，我们了解了卷积神经网络（CNN）的基本概念和主要组件。CNN 通过卷积、池化、激活函数等操作，能够有效地提取输入数据的特征，从而完成各种视觉和语音等任务。CNN 在计算机视觉、自然语言处理等领域有着广泛的应用前景，值得进一步深入学习和应用。</p>',30),t=[o];function l(h,d){return e(),n("div",null,t)}const p=a(r,[["render",l],["__file"," juanjishenjingwangluo（Convolutional Neural Network，CNN）.html.vue"]]);export{p as default};
